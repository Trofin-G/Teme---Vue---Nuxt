"use strict";function _typeof(obj) {"@babel/helpers - typeof";return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {return typeof obj;} : function (obj) {return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;}, _typeof(obj);}function _toConsumableArray(arr) {return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();}function _nonIterableSpread() {throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _unsupportedIterableToArray(o, minLen) {if (!o) return;if (typeof o === "string") return _arrayLikeToArray(o, minLen);var n = Object.prototype.toString.call(o).slice(8, -1);if (n === "Object" && o.constructor) n = o.constructor.name;if (n === "Map" || n === "Set") return Array.from(o);if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);}function _iterableToArray(iter) {if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);}function _arrayWithoutHoles(arr) {if (Array.isArray(arr)) return _arrayLikeToArray(arr);}function _arrayLikeToArray(arr, len) {if (len == null || len > arr.length) len = arr.length;for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];return arr2;}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);Object.defineProperty(Constructor, "prototype", { writable: false });return Constructor;}function _toPropertyKey(arg) {var key = _toPrimitive(arg, "string");return _typeof(key) === "symbol" ? key : String(key);}function _toPrimitive(input, hint) {if (_typeof(input) !== "object" || input === null) return input;var prim = input[Symbol.toPrimitive];if (prim !== undefined) {var res = prim.call(input, hint || "default");if (_typeof(res) !== "object") return res;throw new TypeError("@@toPrimitive must return a primitive value.");}return (hint === "string" ? String : Number)(input);} /*
Am revenit cu urmatoarea tema, si anume: Folosind Javascript/jQuery implementeaza un joc de tipul Hangman.

**Cerinta:**
Alfabetul trebuie sa fie generat in mod dinamic
La incarcarea paginii se alege random un cuvant
Numarul de spatii pentru completat va fi “desenat” in functie de cate caractere are cuvantul ales random
Numarul maxim de sanse este 3
Literele gresite sa fie scoase in evidenta si afisate intr-o lista
O data cu introducerea unei litere gresite, se scad sansele (sa fie vizibila aceasta actiune)
Literele pot fi selectate la click/tap sau keypress (fii atent la exceptii)
Daca s-a ghicit cuvantul se afiseaza un bootstrap alert cu un mesaj si apare un buton “Play again” care da refresh la pagina
Layout-ul jocului sa fie unul user-friendly si intuitiv
*/var

Hangman_Tema_18 = /*#__PURE__*/function () {
  function Hangman_Tema_18() {_classCallCheck(this, Hangman_Tema_18);
    if ($(".tema-18").length === 0) {
      return;
    }
    this.init();
    this.handleDOM();
    this.handleEvents();
  }

  /**
   * Declare global variables
   */_createClass(Hangman_Tema_18, [{ key: "init", value:
    function init() {}

    /**
     * Handle DOM queries
     */ }, { key: "handleDOM", value:
    function handleDOM() {
      this.wordContainer = document.querySelector(".word-section");
      this.lettersContainer = document.querySelector(".letters-section");
      this.overlay = document.querySelector(".overlay");
      this.wingame = document.querySelector(".alert-success");
      this.gameover = document.querySelector(".alert-danger");
      this.tryAgainBtn = document.querySelectorAll(".try-again-btn");
      this.wordWin = document.querySelector(".alert-success h4");
      this.wordGameover = document.querySelector(".alert-danger h4");
      this.userLife = document.querySelector(".life2");
      this.imageHangman = document.querySelector(".image");
    }

    /**
     * Listen for events
     */ }, { key: "handleEvents", value:
    function handleEvents() {
      var self = this;
      var guessedWord = [];
      var counterLife = 2;

      // Genereaza alfabetul
      var alpha = Array.from(Array(26)).map(function (e, i) {return i + 97;});
      var alphabet = alpha.map(function (x) {return String.fromCharCode(x);}).reverse();

      // Genereaza un cuvant random din array-ul 'words'
      var words = ["cuvant", "scaun", "masina", "cana", "apel", "animal"];
      var randomWordSplited = [];
      var randomWord = _toConsumableArray(words[Math.floor(Math.random() * words.length)]);

      randomWord.forEach(function (element) {
        randomWordSplited.push(element);
      });
      randomWordSplited.reverse();
      console.log(randomWordSplited, "randomWordSplited");

      // Afiseaza cuvantul random
      randomWordSplited.map(function (el) {
        var wordTemp = "\n                    <p class='wordLetter' data-check=\"false\">".concat(
        el, "</p>\n                ");

        self.wordContainer.insertAdjacentHTML("afterbegin", wordTemp);
      });
      var randomWordJoined = randomWordSplited.reverse().join("");

      // Afiseaza alfabetul
      alphabet.map(function (el) {
        var alphabetTemp = "\n                    <button type=\"button\" class=\"btn btn-secondary\">".concat(
        el, "</button>\n                ");

        self.lettersContainer.insertAdjacentHTML("afterbegin", alphabetTemp);
      });

      // Selecteaza litera
      this.lettersContainer.addEventListener("click", function (e) {
        var clicked = e.target.closest(".btn-secondary");
        if (!clicked) return;
        var keySelected = clicked.textContent;

        updatePack(keySelected);
      });

      document.addEventListener("keyup", function (e) {
        if (alphabet.includes(e.key)) {
          var keySelected = e.key;

          updatePack(keySelected);
        }
      });

      var updatePack = function updatePack(keySelected) {
        disabledLetter(keySelected);
        winHandler(keySelected);
        loseHandler(keySelected);
        userLifeHandler();
      };

      // Dezactiveaza literele folosite
      var disabledLetter = function disabledLetter(keySelected) {
        document.querySelectorAll(".btn-secondary").forEach(function (el) {
          if (el.textContent === keySelected) {
            el.classList.add("correctLetter");
          }
        });
      };

      // Afiseaza literele corecte din cuvant si afiseaza mesajul de castig si butonul de 'joaca din nou'
      var winHandler = function winHandler(keySelected) {
        document.querySelectorAll(".wordLetter").forEach(function (el) {
          if (el.textContent === keySelected) {
            el.style.visibility = "visible";
          }

          if (el.style.visibility === "visible" && el.getAttribute("data-check") === "false") {
            el.setAttribute("data-check", "true");
            guessedWord.push(el.textContent);
          }
        });

        if (randomWordSplited.length === guessedWord.length && randomWordSplited.every(function (val) {return guessedWord.includes(val);})) {
          self.wordWin.textContent = "Cuvantul: ".concat(randomWordJoined);
          self.wingame.classList.remove("hidden");
          self.overlay.classList.remove("hidden");
        }
      };

      // Afiseaza viata si schimba imaginea
      var userLifeHandler = function userLifeHandler() {
        var currentLife = counterLife + 1;
        self.userLife.textContent = "Viata curenta: ".concat(currentLife);

        if (currentLife === 2) {
          self.imageHangman.setAttribute("src", "images/tema-18/hangman_1.png");
        } else if (currentLife === 1) {
          self.imageHangman.setAttribute("src", "images/tema-18/hangman_2.png");
        } else if (currentLife === 0) {
          self.imageHangman.setAttribute("src", "images/tema-18/hangman_3.png");
        }
      };

      // Afiseaza mesajul de pierdere si butonul de 'joaca din nou'
      var loseHandler = function loseHandler(keySelected) {
        if (!randomWordSplited.includes(keySelected)) {
          if (counterLife !== 0) {
            counterLife--;
          } else {
            self.wordGameover.textContent = "Cuvantul: ".concat(randomWordJoined);
            self.gameover.classList.remove("hidden");
            self.overlay.classList.remove("hidden");
          }
        }
      };

      // Refrash page
      this.tryAgainBtn.forEach(function (el) {
        el.addEventListener("click", function (e) {
          e.preventDefault();
          window.location.reload();
        });
      });
    } }]);return Hangman_Tema_18;}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,

"use strict";function _typeof(obj) {"@babel/helpers - typeof";return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {return typeof obj;} : function (obj) {return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;}, _typeof(obj);}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);Object.defineProperty(Constructor, "prototype", { writable: false });return Constructor;}function _toPropertyKey(arg) {var key = _toPrimitive(arg, "string");return _typeof(key) === "symbol" ? key : String(key);}function _toPrimitive(input, hint) {if (_typeof(input) !== "object" || input === null) return input;var prim = input[Symbol.toPrimitive];if (prim !== undefined) {var res = prim.call(input, hint || "default");if (_typeof(res) !== "object") return res;throw new TypeError("@@toPrimitive must return a primitive value.");}return (hint === "string" ? String : Number)(input);}var HomepageHandler = /*#__PURE__*/function () {
  function HomepageHandler() {_classCallCheck(this, HomepageHandler);
    if ($(".homepage").length === 0) {
      return;
    }

    this.init();
    this.handleDOM();
    this.handleEvents();
  }

  /**
   * Declare global variables
   */_createClass(HomepageHandler, [{ key: "init", value:
    function init() {}

    /**
     * Handle DOM queries
     */ }, { key: "handleDOM", value:
    function handleDOM() {

      // this.homepageContainer = document.querySelector('.homepage-wrapper')
    }
    /**
     * Listen for events
     */ }, { key: "handleEvents", value:
    function handleEvents() {
      var self = this;

      // const displayingData = () => {
      //     const projectsTemp = `

      //     `

      // self.homepageContainer.insertAdjacentHTML("afterbegin", listTemp);

      // }
      // displayingData();
    } }]);return HomepageHandler;}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSG9tZXBhZ2VIYW5kbGVyLmpzIiwibmFtZXMiOlsiSG9tZXBhZ2VIYW5kbGVyIiwiJCIsImxlbmd0aCIsImluaXQiLCJoYW5kbGVET00iLCJoYW5kbGVFdmVudHMiLCJzZWxmIl0sInNvdXJjZXMiOlsiSG9tZXBhZ2VIYW5kbGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNsYXNzIEhvbWVwYWdlSGFuZGxlciB7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBpZiAoJChcIi5ob21lcGFnZVwiKS5sZW5ndGggPT09IDApIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5pbml0KCk7XHJcbiAgICAgICAgdGhpcy5oYW5kbGVET00oKTtcclxuICAgICAgICB0aGlzLmhhbmRsZUV2ZW50cygpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogRGVjbGFyZSBnbG9iYWwgdmFyaWFibGVzXHJcbiAgICAgKi9cclxuICAgIGluaXQoKSB7fVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogSGFuZGxlIERPTSBxdWVyaWVzXHJcbiAgICAgKi9cclxuICAgIGhhbmRsZURPTSgpIHtcclxuICAgICAgICAvLyB0aGlzLmhvbWVwYWdlQ29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmhvbWVwYWdlLXdyYXBwZXInKVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogTGlzdGVuIGZvciBldmVudHNcclxuICAgICAqL1xyXG4gICAgaGFuZGxlRXZlbnRzKCkge1xyXG4gICAgICAgIGxldCBzZWxmID0gdGhpcztcclxuXHJcbiAgICAgICAgLy8gY29uc3QgZGlzcGxheWluZ0RhdGEgPSAoKSA9PiB7XHJcbiAgICAgICAgLy8gICAgIGNvbnN0IHByb2plY3RzVGVtcCA9IGBcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgIC8vICAgICBgXHJcblxyXG4gICAgICAgICAgICAvLyBzZWxmLmhvbWVwYWdlQ29udGFpbmVyLmluc2VydEFkamFjZW50SFRNTChcImFmdGVyYmVnaW5cIiwgbGlzdFRlbXApO1xyXG5cclxuICAgICAgICAvLyB9XHJcbiAgICAgICAgLy8gZGlzcGxheWluZ0RhdGEoKTtcclxuICAgIH1cclxufVxyXG4iXSwibWFwcGluZ3MiOiIwakRBQU1BLGVBQWU7RUFDakIsMkJBQWM7SUFDVixJQUFJQyxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUNDLE1BQU0sS0FBSyxDQUFDLEVBQUU7TUFDN0I7SUFDSjs7SUFFQSxJQUFJLENBQUNDLElBQUksRUFBRTtJQUNYLElBQUksQ0FBQ0MsU0FBUyxFQUFFO0lBQ2hCLElBQUksQ0FBQ0MsWUFBWSxFQUFFO0VBQ3ZCOztFQUVBO0FBQ0o7QUFDQSxLQUZJO0lBR0EsZ0JBQU8sQ0FBQzs7SUFFUjtBQUNKO0FBQ0EsT0FGSTtJQUdBLHFCQUFZOztNQUNSO0lBQUE7SUFHSjtBQUNKO0FBQ0EsT0FGSTtJQUdBLHdCQUFlO01BQ1gsSUFBSUMsSUFBSSxHQUFHLElBQUk7O01BRWY7TUFDQTs7TUFFQTs7TUFFSTs7TUFFSjtNQUNBO0lBQ0osQ0FBQyJ9

"use strict";function _typeof(obj) {"@babel/helpers - typeof";return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {return typeof obj;} : function (obj) {return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;}, _typeof(obj);}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);Object.defineProperty(Constructor, "prototype", { writable: false });return Constructor;}function _toPropertyKey(arg) {var key = _toPrimitive(arg, "string");return _typeof(key) === "symbol" ? key : String(key);}function _toPrimitive(input, hint) {if (_typeof(input) !== "object" || input === null) return input;var prim = input[Symbol.toPrimitive];if (prim !== undefined) {var res = prim.call(input, hint || "default");if (_typeof(res) !== "object") return res;throw new TypeError("@@toPrimitive must return a primitive value.");}return (hint === "string" ? String : Number)(input);}var LayoutHandler = /*#__PURE__*/function () {
  function LayoutHandler() {_classCallCheck(this, LayoutHandler);
    this.init();
    this.handleDOM();
    this.handleEvents();
  }

  /**
   * Declare global variables
   */_createClass(LayoutHandler, [{ key: "init", value:
    function init() {}

    /**
     * Handle DOM queries
     */ }, { key: "handleDOM", value:
    function handleDOM() {}

    /**
     * Listen for events
     */ }, { key: "handleEvents", value:
    function handleEvents() {
      var self = this;

      setTimeout(function () {
        self.setBgImage();
      }, 150);
    }

    /**
     * Set background image if attribute "data-image" exist
     */ }, { key: "setBgImage", value:
    function setBgImage() {
      jQuery("*[data-image]").each(function () {
        var imageUrl = jQuery(this).attr("data-image");

        if (imageUrl) {
          jQuery(this).css("background-image", "url(" + imageUrl + ")");
        }
      });
    } }]);return LayoutHandler;}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTGF5b3V0SGFuZGxlci5qcyIsIm5hbWVzIjpbIkxheW91dEhhbmRsZXIiLCJpbml0IiwiaGFuZGxlRE9NIiwiaGFuZGxlRXZlbnRzIiwic2VsZiIsInNldFRpbWVvdXQiLCJzZXRCZ0ltYWdlIiwialF1ZXJ5IiwiZWFjaCIsImltYWdlVXJsIiwiYXR0ciIsImNzcyJdLCJzb3VyY2VzIjpbIkxheW91dEhhbmRsZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgTGF5b3V0SGFuZGxlciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuaW5pdCgpO1xuICAgICAgICB0aGlzLmhhbmRsZURPTSgpO1xuICAgICAgICB0aGlzLmhhbmRsZUV2ZW50cygpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIERlY2xhcmUgZ2xvYmFsIHZhcmlhYmxlc1xuICAgICAqL1xuICAgIGluaXQoKSB7fVxuXG4gICAgLyoqXG4gICAgICogSGFuZGxlIERPTSBxdWVyaWVzXG4gICAgICovXG4gICAgaGFuZGxlRE9NKCkge31cblxuICAgIC8qKlxuICAgICAqIExpc3RlbiBmb3IgZXZlbnRzXG4gICAgICovXG4gICAgaGFuZGxlRXZlbnRzKCkge1xuICAgICAgICBsZXQgc2VsZiA9IHRoaXM7XG5cbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICBzZWxmLnNldEJnSW1hZ2UoKTtcbiAgICAgICAgfSwgMTUwKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTZXQgYmFja2dyb3VuZCBpbWFnZSBpZiBhdHRyaWJ1dGUgXCJkYXRhLWltYWdlXCIgZXhpc3RcbiAgICAgKi9cbiAgICBzZXRCZ0ltYWdlKCkge1xuICAgICAgICBqUXVlcnkoXCIqW2RhdGEtaW1hZ2VdXCIpLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgbGV0IGltYWdlVXJsID0galF1ZXJ5KHRoaXMpLmF0dHIoXCJkYXRhLWltYWdlXCIpO1xuXG4gICAgICAgICAgICBpZiAoaW1hZ2VVcmwpIHtcbiAgICAgICAgICAgICAgICBqUXVlcnkodGhpcykuY3NzKFwiYmFja2dyb3VuZC1pbWFnZVwiLCBcInVybChcIiArIGltYWdlVXJsICsgXCIpXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG59XG4iXSwibWFwcGluZ3MiOiIwakRBQU1BLGFBQWE7RUFDZix5QkFBYztJQUNWLElBQUksQ0FBQ0MsSUFBSSxFQUFFO0lBQ1gsSUFBSSxDQUFDQyxTQUFTLEVBQUU7SUFDaEIsSUFBSSxDQUFDQyxZQUFZLEVBQUU7RUFDdkI7O0VBRUE7QUFDSjtBQUNBLEtBRkk7SUFHQSxnQkFBTyxDQUFDOztJQUVSO0FBQ0o7QUFDQSxPQUZJO0lBR0EscUJBQVksQ0FBQzs7SUFFYjtBQUNKO0FBQ0EsT0FGSTtJQUdBLHdCQUFlO01BQ1gsSUFBSUMsSUFBSSxHQUFHLElBQUk7O01BRWZDLFVBQVUsQ0FBQyxZQUFNO1FBQ2JELElBQUksQ0FBQ0UsVUFBVSxFQUFFO01BQ3JCLENBQUMsRUFBRSxHQUFHLENBQUM7SUFDWDs7SUFFQTtBQUNKO0FBQ0EsT0FGSTtJQUdBLHNCQUFhO01BQ1RDLE1BQU0sQ0FBQyxlQUFlLENBQUMsQ0FBQ0MsSUFBSSxDQUFDLFlBQVk7UUFDckMsSUFBSUMsUUFBUSxHQUFHRixNQUFNLENBQUMsSUFBSSxDQUFDLENBQUNHLElBQUksQ0FBQyxZQUFZLENBQUM7O1FBRTlDLElBQUlELFFBQVEsRUFBRTtVQUNWRixNQUFNLENBQUMsSUFBSSxDQUFDLENBQUNJLEdBQUcsQ0FBQyxrQkFBa0IsRUFBRSxNQUFNLEdBQUdGLFFBQVEsR0FBRyxHQUFHLENBQUM7UUFDakU7TUFDSixDQUFDLENBQUM7SUFDTixDQUFDIn0=

"use strict";function _typeof(obj) {"@babel/helpers - typeof";return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {return typeof obj;} : function (obj) {return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;}, _typeof(obj);}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);Object.defineProperty(Constructor, "prototype", { writable: false });return Constructor;}function _toPropertyKey(arg) {var key = _toPrimitive(arg, "string");return _typeof(key) === "symbol" ? key : String(key);}function _toPrimitive(input, hint) {if (_typeof(input) !== "object" || input === null) return input;var prim = input[Symbol.toPrimitive];if (prim !== undefined) {var res = prim.call(input, hint || "default");if (_typeof(res) !== "object") return res;throw new TypeError("@@toPrimitive must return a primitive value.");}return (hint === "string" ? String : Number)(input);} /* 
**Cerinta:**
-----------------
Implementeaza o lista de task-uri folosind: ajax, template-izare, events si cookies.

Folosind URL-ul https://jsonplaceholder.typicode.com/todos, sa se “deseneze” primele 5 elemente din ToDo List:
Toate elementele din lista se vor afla in cadrul unui panel/card cu titlul “To do list”
Fiecare element din lista va fi sub forma de checkbox
Checkbox-ul nu trebuie sa fie default, ci unul custom/stilizat
Implementarea unui al doilea panel/card
Toate elementele bifate din lista se vor afla in cadrul unui panel/card cu titlul “Done”
Un buton “Save”
La click pe unul din elementele din “To do list”, acel element va trebui mutat in lista “Done” ca si “bifat”
La click pe unul din elementele din “Done”, acel element va trebui mutat in lista “To do list” ca si “nebifat”
La click pe “Save” se vor salva toate elementele din lista “Done” intr-un cookie si se va da refresh la pagina
La incarcarea paginii, se vor prelua din cookie toate elementele “bifate” si se vor popula cele doua liste corespunzator

**Tips:**
-----------------
Folosind Bootstrap, implementeaza un layout user-friendly (nu lasa elemente browser default)
Folositi libraria https://github.com/carhartl/jquery-cookie pentru cookies
Pentru a salva in cookie elementele bifate/nebifate foloseste un array
*/var

ToDoList_Tema_12 = /*#__PURE__*/function () {
  function ToDoList_Tema_12() {_classCallCheck(this, ToDoList_Tema_12);
    if ($(".tema-12").length === 0) {
      return;
    }
    this.init();
    this.handleDOM();
    this.handleEvents();
  }

  /**
   * Declare global variables
   */_createClass(ToDoList_Tema_12, [{ key: "init", value:
    function init() {}

    /**
     * Handle DOM queries
     */ }, { key: "handleDOM", value:
    function handleDOM() {
      this.toDoUnchecked = document.querySelector(".todo-list-unchecked");
      this.toDoChecked = document.querySelector(".todo-list-checked");
      this.saveBtn = document.querySelector(".btn-success");
      this.cloneArr = [];
      this.dataForFetch = "https://jsonplaceholder.typicode.com/todos";
    } }, { key: "handleEvents", value:

    function handleEvents() {var _this = this;
      var self = this;
      // let cloneArr = [];

      this.fetchData(self.dataForFetch);

      setTimeout(function () {
        if ($.cookie("list") !== null && $.cookie("list") !== undefined) {
          self.cloneArr = JSON.parse($.cookie("list"));
        }

        var checkHandler = function checkHandler(clicked, updateTo) {
          if (!clicked) return;
          var elementId = clicked.getAttribute("data-id");
          var updateObj = self.cloneArr.findIndex(function (obj) {return obj.id == elementId;});
          self.cloneArr[updateObj].completed = updateTo;
          displayingData();
        };

        _this.toDoChecked.addEventListener("click", function (e) {var updateTo = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
          var clicked = e.target.closest(".todo-element");
          checkHandler(clicked, updateTo);
        });

        _this.toDoUnchecked.addEventListener("click", function (e) {var updateTo = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
          var clicked = e.target.closest(".todo-element");
          checkHandler(clicked, updateTo);
        });

        var updateRow = function updateRow() {
          document.querySelectorAll(".todo-list-checked .todo-element img").forEach(function (item) {return item.setAttribute("src", "images/checked.png");});
          document.querySelectorAll(".todo-list-checked .todo-element p").forEach(function (item) {return item.style.textDecoration = "line-through";});
        };

        var displayingData = function displayingData() {
          self.toDoUnchecked.innerHTML = self.toDoChecked.innerHTML = "";

          self.cloneArr.map(function (item) {
            var listTemp = "\n                        <div class=\"todo-element\" data-id=\"".concat(
            item.id, "\">\n                            <img src=\"images/unchecked.png\" alt=\"checked\">\n                            <p>").concat(

            item.title, "</p>\n                        </div>\n                    ");



            if (item.completed) {
              self.toDoChecked.insertAdjacentHTML("afterbegin", listTemp);
              updateRow();
            } else {
              self.toDoUnchecked.insertAdjacentHTML("afterbegin", listTemp);
            }
          });
        };
        displayingData();

        _this.saveBtn.addEventListener("click", function () {
          $.cookie("list", JSON.stringify(self.cloneArr));
          window.location.reload();
        });
      }, 100);
    } }, { key: "fetchData", value:

    function fetchData(fetchDataItems) {var _this2 = this;
      fetch(fetchDataItems).
      then(function (res) {return res.json();}).
      then(function (data) {
        data.forEach(function (item) {
          if (_this2.cloneArr.length < 5) {
            _this2.cloneArr.push(item);
          } // slice ++
        });
      });
    } }]);return ToDoList_Tema_12;}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,

"use strict";function _typeof(obj) {"@babel/helpers - typeof";return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {return typeof obj;} : function (obj) {return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;}, _typeof(obj);}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);Object.defineProperty(Constructor, "prototype", { writable: false });return Constructor;}function _toPropertyKey(arg) {var key = _toPrimitive(arg, "string");return _typeof(key) === "symbol" ? key : String(key);}function _toPrimitive(input, hint) {if (_typeof(input) !== "object" || input === null) return input;var prim = input[Symbol.toPrimitive];if (prim !== undefined) {var res = prim.call(input, hint || "default");if (_typeof(res) !== "object") return res;throw new TypeError("@@toPrimitive must return a primitive value.");}return (hint === "string" ? String : Number)(input);} /*
Am revenit cu urmatoarea tema, si anume: Implementeaza jocul Tic-Tac-Toe (X si 0) folosind Javascript/jQuery..

**Cerinta:**
Layout user friendly
Afisare modal pentru:
A castigat jucatorul X
A astigat jucatorul 0
Egalitate
Mesaje informative (toast):
Incepe X/0
Este randul jucatorului X/0
Dupa finalizarea jocului, va aparea un buton de “Play again” prin care se reseteaza jocul (nu se da refresh la pagina).
*/var

XO_Tema_24 = /*#__PURE__*/function () {
  function XO_Tema_24() {_classCallCheck(this, XO_Tema_24);
    if ($(".tema-24").length === 0) {
      return;
    }
    this.init();
    this.handleDOM();
    this.handleEvents();
  }

  /**
   * Declare global variables
   */_createClass(XO_Tema_24, [{ key: "init", value:
    function init() {}

    /**
     * Handle DOM queries
     */ }, { key: "handleDOM", value:
    function handleDOM() {
      this.cellContainer = document.querySelector(".board");
      this.cells = document.querySelectorAll(".cell");
      this.activePlayer = document.querySelector(".active-player");
      this.model = document.querySelector(".modal");
      this.overlay = document.querySelector(".overlay");
      this.showWinner = document.querySelector(".modal p");
      this.resetBtn = document.querySelector(".btn-primary");
    }

    /**
     * Listen for events
     */ }, { key: "handleEvents", value:
    function handleEvents() {
      var self = this;

      var winningPositions = [
      [0, 1, 2],
      [3, 4, 5],
      [6, 7, 8],
      [0, 3, 6],
      [1, 4, 7],
      [2, 5, 8],
      [0, 4, 8],
      [2, 4, 6]];

      var winningPositionsEmptyArr = ["", "", "", "", "", "", "", "", ""];


      // Genereaza random un numar intre X si O
      var activePlayer = Math.trunc(Math.random() * 2) === 1 ? "X" : "O";
      self.activePlayer.textContent = "Primul care alege este: ".concat(activePlayer);

      // La click va schimba player-ul
      var switchPlayer = function switchPlayer() {
        activePlayer = activePlayer == "X" ? "O" : "X";
      };

      // Afiseaza activePlayer-ul
      this.cellContainer.addEventListener("click", function (e) {
        var clicked = e.target.closest(".cell");
        if (!clicked) return;
        var cellDataId = clicked.getAttribute("data-cell");

        if (winningPositionsEmptyArr[cellDataId] == "") {
          winningPositionsEmptyArr[cellDataId] = activePlayer;
          clicked.textContent = activePlayer;
          self.activePlayer.textContent = "Este randul jucatorului: \"".concat(activePlayer == "X" ? "O" : "X", "\"");

          switchPlayer();
          checkWinner();
          console.log(winningPositionsEmptyArr, 'winningPositionsEmptyArr');
        }
      });

      // Verifica daca exista un castigator
      var checkWinner = function checkWinner() {
        for (var i = 0; i < winningPositions.length; i++) {
          var position = winningPositions[i];
          var positionOne = winningPositionsEmptyArr[position[0]];
          var positionTwo = winningPositionsEmptyArr[position[1]];
          var positionThree = winningPositionsEmptyArr[position[2]];

          // Verifica daca empty arry-ul are valori sau nu
          if (positionOne == "" || positionTwo == "" || positionThree == "") {
            continue;
          }

          // Verifica daca un array din cele 8 este pozitiv
          // Afiseaza modalul cu castigatorul sau remiza
          if (positionOne == positionTwo && positionTwo == positionThree) {
            self.showWinner.textContent = "Jucatorul: \"".concat(activePlayer == "X" ? "O" : "X", "\" a castigat!");
            self.model.classList.remove("hidden");
            self.overlay.classList.remove("hidden");
          } else if (!winningPositionsEmptyArr.includes("")) {
            self.showWinner.textContent = "Remiza!";
            self.model.classList.remove("hidden");
            self.overlay.classList.remove("hidden");
          }
        }
      };

      // Reseteaza jocul
      this.resetBtn.addEventListener("click", function () {
        self.cells.forEach(function (item) {return item.textContent = "";});
        winningPositionsEmptyArr = ["", "", "", "", "", "", "", "", ""];
        self.model.classList.add("hidden");
        self.overlay.classList.add("hidden");
        activePlayer = Math.trunc(Math.random() * 2) === 1 ? "X" : "O";
        self.activePlayer.textContent = "Primul care alege este: ".concat(activePlayer);
      });
    } }]);return XO_Tema_24;}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,

"use strict"; // init handlers
var layoutHandler = null;
var homepageHandler = null;
var toDoList_Tema_12 = null;
var hangman_Tema_18 = null;
var xO_Tema_24 = null;

var initHandlers = function initHandlers() {
  layoutHandler = new LayoutHandler();
  homepageHandler = new HomepageHandler();
  toDoList_Tema_12 = new ToDoList_Tema_12();
  hangman_Tema_18 = new Hangman_Tema_18();
  xO_Tema_24 = new XO_Tema_24();
};

// uncomment this to use jQuery
(function ($) {
  $(document).ready(function () {
    initHandlers();
  });
})(jQuery);

// init handlers using vanilla
// document.addEventListener('DOMContentLoaded', () => { initHandlers(); });
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm5hbWVzIjpbImxheW91dEhhbmRsZXIiLCJob21lcGFnZUhhbmRsZXIiLCJ0b0RvTGlzdF9UZW1hXzEyIiwiaGFuZ21hbl9UZW1hXzE4IiwieE9fVGVtYV8yNCIsImluaXRIYW5kbGVycyIsIkxheW91dEhhbmRsZXIiLCJIb21lcGFnZUhhbmRsZXIiLCJUb0RvTGlzdF9UZW1hXzEyIiwiSGFuZ21hbl9UZW1hXzE4IiwiWE9fVGVtYV8yNCIsIiQiLCJkb2N1bWVudCIsInJlYWR5IiwialF1ZXJ5Il0sInNvdXJjZXMiOlsibWFpbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbml0IGhhbmRsZXJzXG5sZXQgbGF5b3V0SGFuZGxlciA9IG51bGw7XG5sZXQgaG9tZXBhZ2VIYW5kbGVyID0gbnVsbDtcbmxldCB0b0RvTGlzdF9UZW1hXzEyID0gbnVsbDtcbmxldCBoYW5nbWFuX1RlbWFfMTggPSBudWxsO1xubGV0IHhPX1RlbWFfMjQgPSBudWxsO1xuXG5jb25zdCBpbml0SGFuZGxlcnMgPSAoKSA9PiB7XG4gICAgbGF5b3V0SGFuZGxlciA9IG5ldyBMYXlvdXRIYW5kbGVyKCk7XG4gICAgaG9tZXBhZ2VIYW5kbGVyID0gbmV3IEhvbWVwYWdlSGFuZGxlcigpO1xuICAgIHRvRG9MaXN0X1RlbWFfMTIgPSBuZXcgVG9Eb0xpc3RfVGVtYV8xMigpO1xuICAgIGhhbmdtYW5fVGVtYV8xOCA9IG5ldyBIYW5nbWFuX1RlbWFfMTgoKTtcbiAgICB4T19UZW1hXzI0ID0gbmV3IFhPX1RlbWFfMjQoKTtcbn07XG5cbi8vIHVuY29tbWVudCB0aGlzIHRvIHVzZSBqUXVlcnlcbigoJCkgPT4ge1xuICAgICQoZG9jdW1lbnQpLnJlYWR5KCgpID0+IHtcbiAgICAgICAgaW5pdEhhbmRsZXJzKCk7XG4gICAgfSk7XG59KShqUXVlcnkpO1xuXG4vLyBpbml0IGhhbmRsZXJzIHVzaW5nIHZhbmlsbGFcbi8vIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCAoKSA9PiB7IGluaXRIYW5kbGVycygpOyB9KTtcbiJdLCJtYXBwaW5ncyI6ImNBQUE7QUFDQSxJQUFJQSxhQUFhLEdBQUcsSUFBSTtBQUN4QixJQUFJQyxlQUFlLEdBQUcsSUFBSTtBQUMxQixJQUFJQyxnQkFBZ0IsR0FBRyxJQUFJO0FBQzNCLElBQUlDLGVBQWUsR0FBRyxJQUFJO0FBQzFCLElBQUlDLFVBQVUsR0FBRyxJQUFJOztBQUVyQixJQUFNQyxZQUFZLEdBQUcsU0FBZkEsWUFBWSxHQUFTO0VBQ3ZCTCxhQUFhLEdBQUcsSUFBSU0sYUFBYSxFQUFFO0VBQ25DTCxlQUFlLEdBQUcsSUFBSU0sZUFBZSxFQUFFO0VBQ3ZDTCxnQkFBZ0IsR0FBRyxJQUFJTSxnQkFBZ0IsRUFBRTtFQUN6Q0wsZUFBZSxHQUFHLElBQUlNLGVBQWUsRUFBRTtFQUN2Q0wsVUFBVSxHQUFHLElBQUlNLFVBQVUsRUFBRTtBQUNqQyxDQUFDOztBQUVEO0FBQ0EsQ0FBQyxVQUFDQyxDQUFDLEVBQUs7RUFDSkEsQ0FBQyxDQUFDQyxRQUFRLENBQUMsQ0FBQ0MsS0FBSyxDQUFDLFlBQU07SUFDcEJSLFlBQVksRUFBRTtFQUNsQixDQUFDLENBQUM7QUFDTixDQUFDLEVBQUVTLE1BQU0sQ0FBQzs7QUFFVjtBQUNBIn0=

//# sourceMappingURL=main.min.js.map
