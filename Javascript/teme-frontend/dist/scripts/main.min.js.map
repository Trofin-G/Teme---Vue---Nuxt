{"version":3,"sources":["Hangman_Tema_18.js","HomepageHandler.js","LayoutHandler.js","ToDoList_Tema_12.js","XO_Tema_24.js","main.js"],"names":["Hangman_Tema_18","$","length","init","handleDOM","handleEvents","wordContainer","document","querySelector","lettersContainer","overlay","wingame","gameover","tryAgainBtn","querySelectorAll","wordWin","wordGameover","userLife","imageHangman","self","guessedWord","counterLife","alpha","Array","from","map","e","i","alphabet","x","String","fromCharCode","reverse","words","randomWordSplited","randomWord","Math","floor","random","forEach","element","push","console","log","el","wordTemp","insertAdjacentHTML","randomWordJoined","join","alphabetTemp","addEventListener","clicked","target","closest","keySelected","textContent","updatePack","includes","key","disabledLetter","winHandler","loseHandler","userLifeHandler","classList","add","style","visibility","getAttribute","setAttribute","every","val","remove","currentLife","preventDefault","window","location","reload","HomepageHandler","LayoutHandler","setTimeout","setBgImage","jQuery","each","imageUrl","attr","css","ToDoList_Tema_12","toDoUnchecked","toDoChecked","saveBtn","cloneArr","dataForFetch","fetchData","cookie","undefined","JSON","parse","checkHandler","updateTo","elementId","updateObj","findIndex","obj","id","completed","displayingData","updateRow","item","textDecoration","innerHTML","listTemp","title","stringify","fetchDataItems","fetch","then","res","json","data","XO_Tema_24","cellContainer","cells","activePlayer","model","showWinner","resetBtn","winningPositions","winningPositionsEmptyArr","trunc","switchPlayer","cellDataId","checkWinner","position","positionOne","positionTwo","positionThree","layoutHandler","homepageHandler","toDoList_Tema_12","hangman_Tema_18","xO_Tema_24","initHandlers","ready"],"mappings":"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","file":"main.min.js","sourcesContent":["/*\r\nAm revenit cu urmatoarea tema, si anume: Folosind Javascript/jQuery implementeaza un joc de tipul Hangman.\r\n\r\n**Cerinta:**\r\nAlfabetul trebuie sa fie generat in mod dinamic\r\nLa incarcarea paginii se alege random un cuvant\r\nNumarul de spatii pentru completat va fi “desenat” in functie de cate caractere are cuvantul ales random\r\nNumarul maxim de sanse este 3\r\nLiterele gresite sa fie scoase in evidenta si afisate intr-o lista\r\nO data cu introducerea unei litere gresite, se scad sansele (sa fie vizibila aceasta actiune)\r\nLiterele pot fi selectate la click/tap sau keypress (fii atent la exceptii)\r\nDaca s-a ghicit cuvantul se afiseaza un bootstrap alert cu un mesaj si apare un buton “Play again” care da refresh la pagina\r\nLayout-ul jocului sa fie unul user-friendly si intuitiv\r\n*/\r\n\r\nclass Hangman_Tema_18 {\r\n    constructor() {\r\n        if ($(\".tema-18\").length === 0) {\r\n            return;\r\n        }\r\n        this.init();\r\n        this.handleDOM();\r\n        this.handleEvents();\r\n    }\r\n\r\n    /**\r\n     * Declare global variables\r\n     */\r\n    init() {}\r\n\r\n    /**\r\n     * Handle DOM queries\r\n     */\r\n    handleDOM() {\r\n        this.wordContainer = document.querySelector(\".word-section\");\r\n        this.lettersContainer = document.querySelector(\".letters-section\");\r\n        this.overlay = document.querySelector(\".overlay\");\r\n        this.wingame = document.querySelector(\".alert-success\");\r\n        this.gameover = document.querySelector(\".alert-danger\");\r\n        this.tryAgainBtn = document.querySelectorAll(\".try-again-btn\");\r\n        this.wordWin = document.querySelector(\".alert-success h4\");\r\n        this.wordGameover = document.querySelector(\".alert-danger h4\");\r\n        this.userLife = document.querySelector(\".life2\");\r\n        this.imageHangman = document.querySelector(\".image\");\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     */\r\n    handleEvents() {\r\n        let self = this;\r\n        let guessedWord = [];\r\n        let counterLife = 2;\r\n\r\n        // Genereaza alfabetul\r\n        const alpha = Array.from(Array(26)).map((e, i) => i + 97);\r\n        const alphabet = alpha.map((x) => String.fromCharCode(x)).reverse();\r\n\r\n        // Genereaza un cuvant random din array-ul 'words'\r\n        const words = [\"cuvant\", \"scaun\", \"masina\", \"cana\", \"apel\", \"animal\"];\r\n        let randomWordSplited = [];\r\n        const randomWord = [...words[Math.floor(Math.random() * words.length)]];\r\n\r\n        randomWord.forEach((element) => {\r\n            randomWordSplited.push(element);\r\n        });\r\n        randomWordSplited.reverse();\r\n        console.log(randomWordSplited, \"randomWordSplited\");\r\n\r\n        // Afiseaza cuvantul random\r\n        randomWordSplited.map((el) => {\r\n            const wordTemp = `\r\n                    <p class='wordLetter' data-check=\"false\">${el}</p>\r\n                `;\r\n            self.wordContainer.insertAdjacentHTML(\"afterbegin\", wordTemp);\r\n        });\r\n        const randomWordJoined = randomWordSplited.reverse().join(\"\");\r\n\r\n        // Afiseaza alfabetul\r\n        alphabet.map((el) => {\r\n            const alphabetTemp = `\r\n                    <button type=\"button\" class=\"btn btn-secondary\">${el}</button>\r\n                `;\r\n            self.lettersContainer.insertAdjacentHTML(\"afterbegin\", alphabetTemp);\r\n        });\r\n\r\n        // Selecteaza litera\r\n        this.lettersContainer.addEventListener(\"click\", (e) => {\r\n            const clicked = e.target.closest(\".btn-secondary\");\r\n            if (!clicked) return;\r\n            let keySelected = clicked.textContent;\r\n\r\n            updatePack(keySelected);\r\n        });\r\n\r\n        document.addEventListener(\"keyup\", (e) => {\r\n            if (alphabet.includes(e.key)) {\r\n                let keySelected = e.key;\r\n\r\n                updatePack(keySelected);\r\n            }\r\n        });\r\n\r\n        const updatePack = (keySelected) => {\r\n            disabledLetter(keySelected);\r\n            winHandler(keySelected);\r\n            loseHandler(keySelected);\r\n            userLifeHandler();\r\n        };\r\n\r\n        // Dezactiveaza literele folosite\r\n        const disabledLetter = (keySelected) => {\r\n            document.querySelectorAll(\".btn-secondary\").forEach((el) => {\r\n                if (el.textContent === keySelected) {\r\n                    el.classList.add(\"correctLetter\");\r\n                }\r\n            });\r\n        };\r\n\r\n        // Afiseaza literele corecte din cuvant si afiseaza mesajul de castig si butonul de 'joaca din nou'\r\n        const winHandler = (keySelected) => {\r\n            document.querySelectorAll(\".wordLetter\").forEach((el) => {\r\n                if (el.textContent === keySelected) {\r\n                    el.style.visibility = \"visible\";\r\n                }\r\n\r\n                if (el.style.visibility === \"visible\" && el.getAttribute(\"data-check\") === \"false\") {\r\n                    el.setAttribute(\"data-check\", \"true\");\r\n                    guessedWord.push(el.textContent);\r\n                }\r\n            });\r\n\r\n            if (randomWordSplited.length === guessedWord.length && randomWordSplited.every((val) => guessedWord.includes(val))) {\r\n                self.wordWin.textContent = `Cuvantul: ${randomWordJoined}`;\r\n                self.wingame.classList.remove(\"hidden\");\r\n                self.overlay.classList.remove(\"hidden\");\r\n            }\r\n        };\r\n\r\n        // Afiseaza viata si schimba imaginea\r\n        const userLifeHandler = () => {\r\n            let currentLife = counterLife + 1;\r\n            self.userLife.textContent = `Viata curenta: ${currentLife}`;\r\n\r\n            if (currentLife === 2) {\r\n                self.imageHangman.setAttribute(\"src\", \"images/tema-18/hangman_1.png\");\r\n            } else if (currentLife === 1) {\r\n                self.imageHangman.setAttribute(\"src\", \"images/tema-18/hangman_2.png\");\r\n            } else if (currentLife === 0) {\r\n                self.imageHangman.setAttribute(\"src\", \"images/tema-18/hangman_3.png\");\r\n            }\r\n        };\r\n\r\n        // Afiseaza mesajul de pierdere si butonul de 'joaca din nou'\r\n        const loseHandler = (keySelected) => {\r\n            if (!randomWordSplited.includes(keySelected)) {\r\n                if (counterLife !== 0) {\r\n                    counterLife--;\r\n                } else {\r\n                    self.wordGameover.textContent = `Cuvantul: ${randomWordJoined}`;\r\n                    self.gameover.classList.remove(\"hidden\");\r\n                    self.overlay.classList.remove(\"hidden\");\r\n                }\r\n            }\r\n        };\r\n\r\n        // Refrash page\r\n        this.tryAgainBtn.forEach((el) => {\r\n            el.addEventListener(\"click\", (e) => {\r\n                e.preventDefault();\r\n                window.location.reload();\r\n            });\r\n        });\r\n    }\r\n}\r\n","class HomepageHandler {\r\n    constructor() {\r\n        if ($(\".homepage\").length === 0) {\r\n            return;\r\n        }\r\n\r\n        this.init();\r\n        this.handleDOM();\r\n        this.handleEvents();\r\n    }\r\n\r\n    /**\r\n     * Declare global variables\r\n     */\r\n    init() {}\r\n\r\n    /**\r\n     * Handle DOM queries\r\n     */\r\n    handleDOM() {\r\n        // this.homepageContainer = document.querySelector('.homepage-wrapper')\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     */\r\n    handleEvents() {\r\n        let self = this;\r\n\r\n        // const displayingData = () => {\r\n        //     const projectsTemp = `\r\n                \r\n        //     `\r\n\r\n            // self.homepageContainer.insertAdjacentHTML(\"afterbegin\", listTemp);\r\n\r\n        // }\r\n        // displayingData();\r\n    }\r\n}\r\n","class LayoutHandler {\n    constructor() {\n        this.init();\n        this.handleDOM();\n        this.handleEvents();\n    }\n\n    /**\n     * Declare global variables\n     */\n    init() {}\n\n    /**\n     * Handle DOM queries\n     */\n    handleDOM() {}\n\n    /**\n     * Listen for events\n     */\n    handleEvents() {\n        let self = this;\n\n        setTimeout(() => {\n            self.setBgImage();\n        }, 150);\n    }\n\n    /**\n     * Set background image if attribute \"data-image\" exist\n     */\n    setBgImage() {\n        jQuery(\"*[data-image]\").each(function () {\n            let imageUrl = jQuery(this).attr(\"data-image\");\n\n            if (imageUrl) {\n                jQuery(this).css(\"background-image\", \"url(\" + imageUrl + \")\");\n            }\n        });\n    }\n}\n","/* \r\n**Cerinta:**\r\n-----------------\r\nImplementeaza o lista de task-uri folosind: ajax, template-izare, events si cookies.\r\n\r\nFolosind URL-ul https://jsonplaceholder.typicode.com/todos, sa se “deseneze” primele 5 elemente din ToDo List:\r\nToate elementele din lista se vor afla in cadrul unui panel/card cu titlul “To do list”\r\nFiecare element din lista va fi sub forma de checkbox\r\nCheckbox-ul nu trebuie sa fie default, ci unul custom/stilizat\r\nImplementarea unui al doilea panel/card\r\nToate elementele bifate din lista se vor afla in cadrul unui panel/card cu titlul “Done”\r\nUn buton “Save”\r\nLa click pe unul din elementele din “To do list”, acel element va trebui mutat in lista “Done” ca si “bifat”\r\nLa click pe unul din elementele din “Done”, acel element va trebui mutat in lista “To do list” ca si “nebifat”\r\nLa click pe “Save” se vor salva toate elementele din lista “Done” intr-un cookie si se va da refresh la pagina\r\nLa incarcarea paginii, se vor prelua din cookie toate elementele “bifate” si se vor popula cele doua liste corespunzator\r\n\r\n**Tips:**\r\n-----------------\r\nFolosind Bootstrap, implementeaza un layout user-friendly (nu lasa elemente browser default)\r\nFolositi libraria https://github.com/carhartl/jquery-cookie pentru cookies\r\nPentru a salva in cookie elementele bifate/nebifate foloseste un array\r\n*/\r\n\r\nclass ToDoList_Tema_12 {\r\n    constructor() {\r\n        if ($(\".tema-12\").length === 0) {\r\n            return;\r\n        }\r\n        this.init();\r\n        this.handleDOM();\r\n        this.handleEvents();\r\n    }\r\n\r\n    /**\r\n     * Declare global variables\r\n     */\r\n    init() {}\r\n\r\n    /**\r\n     * Handle DOM queries\r\n     */\r\n    handleDOM() {\r\n        this.toDoUnchecked = document.querySelector(\".todo-list-unchecked\");\r\n        this.toDoChecked = document.querySelector(\".todo-list-checked\");\r\n        this.saveBtn = document.querySelector(\".btn-success\");\r\n        this.cloneArr = [];\r\n        this.dataForFetch = \"https://jsonplaceholder.typicode.com/todos\";\r\n    }\r\n\r\n    handleEvents() {\r\n        let self = this;\r\n        // let cloneArr = [];\r\n\r\n        this.fetchData(self.dataForFetch);\r\n\r\n        setTimeout(() => {\r\n            if ($.cookie(\"list\") !== null && $.cookie(\"list\") !== undefined) {\r\n                self.cloneArr = JSON.parse($.cookie(\"list\"));\r\n            }\r\n\r\n            const checkHandler = (clicked, updateTo) => {\r\n                if (!clicked) return;\r\n                const elementId = clicked.getAttribute(\"data-id\");\r\n                let updateObj = self.cloneArr.findIndex((obj) => obj.id == elementId);\r\n                self.cloneArr[updateObj].completed = updateTo;\r\n                displayingData();\r\n            };\r\n\r\n            this.toDoChecked.addEventListener(\"click\", (e, updateTo = false) => {\r\n                const clicked = e.target.closest(\".todo-element\");\r\n                checkHandler(clicked, updateTo);\r\n            });\r\n\r\n            this.toDoUnchecked.addEventListener(\"click\", (e, updateTo = true) => {\r\n                const clicked = e.target.closest(\".todo-element\");\r\n                checkHandler(clicked, updateTo);\r\n            });\r\n\r\n            const updateRow = function () {\r\n                document.querySelectorAll(\".todo-list-checked .todo-element img\").forEach((item) => item.setAttribute(\"src\", \"images/checked.png\"));\r\n                document.querySelectorAll(\".todo-list-checked .todo-element p\").forEach((item) => (item.style.textDecoration = \"line-through\"));\r\n            };\r\n\r\n            const displayingData = () => {\r\n                self.toDoUnchecked.innerHTML = self.toDoChecked.innerHTML = \"\";\r\n\r\n                self.cloneArr.map((item) => {\r\n                    const listTemp = `\r\n                        <div class=\"todo-element\" data-id=\"${item.id}\">\r\n                            <img src=\"images/unchecked.png\" alt=\"checked\">\r\n                            <p>${item.title}</p>\r\n                        </div>\r\n                    `;\r\n\r\n                    if (item.completed) {\r\n                        self.toDoChecked.insertAdjacentHTML(\"afterbegin\", listTemp);\r\n                        updateRow();\r\n                    } else {\r\n                        self.toDoUnchecked.insertAdjacentHTML(\"afterbegin\", listTemp);\r\n                    }\r\n                });\r\n            };\r\n            displayingData();\r\n\r\n            this.saveBtn.addEventListener(\"click\", () => {\r\n                $.cookie(\"list\", JSON.stringify(self.cloneArr));\r\n                window.location.reload();\r\n            });\r\n        }, 100);\r\n    }\r\n\r\n    fetchData(fetchDataItems) {\r\n        fetch(fetchDataItems)\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                data.forEach((item) => {\r\n                    if (this.cloneArr.length < 5) {\r\n                        this.cloneArr.push(item);\r\n                    } // slice ++\r\n                });\r\n            });\r\n    }\r\n}\r\n","/*\r\nAm revenit cu urmatoarea tema, si anume: Implementeaza jocul Tic-Tac-Toe (X si 0) folosind Javascript/jQuery..\r\n\r\n**Cerinta:**\r\nLayout user friendly\r\nAfisare modal pentru:\r\nA castigat jucatorul X\r\nA astigat jucatorul 0\r\nEgalitate\r\nMesaje informative (toast):\r\nIncepe X/0\r\nEste randul jucatorului X/0\r\nDupa finalizarea jocului, va aparea un buton de “Play again” prin care se reseteaza jocul (nu se da refresh la pagina).\r\n*/\r\n\r\nclass XO_Tema_24 {\r\n    constructor() {\r\n        if ($(\".tema-24\").length === 0) {\r\n            return;\r\n        }\r\n        this.init();\r\n        this.handleDOM();\r\n        this.handleEvents();\r\n    }\r\n\r\n    /**\r\n     * Declare global variables\r\n     */\r\n    init() {}\r\n\r\n    /**\r\n     * Handle DOM queries\r\n     */\r\n    handleDOM() {\r\n        this.cellContainer = document.querySelector(\".board\");\r\n        this.cells = document.querySelectorAll(\".cell\");\r\n        this.activePlayer = document.querySelector(\".active-player\");\r\n        this.model = document.querySelector(\".modal\");\r\n        this.overlay = document.querySelector(\".overlay\");\r\n        this.showWinner = document.querySelector(\".modal p\");\r\n        this.resetBtn = document.querySelector(\".btn-primary\");\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     */\r\n    handleEvents() {\r\n        let self = this;\r\n\r\n        const winningPositions = [\r\n            [0, 1, 2],\r\n            [3, 4, 5],\r\n            [6, 7, 8],\r\n            [0, 3, 6],\r\n            [1, 4, 7],\r\n            [2, 5, 8],\r\n            [0, 4, 8],\r\n            [2, 4, 6],\r\n        ];\r\n        let winningPositionsEmptyArr = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\r\n\r\n\r\n        // Genereaza random un numar intre X si O\r\n        let activePlayer = Math.trunc(Math.random() * 2) === 1 ? \"X\" : \"O\";\r\n        self.activePlayer.textContent = `Primul care alege este: ${activePlayer}`;\r\n\r\n        // La click va schimba player-ul\r\n        const switchPlayer = () => {\r\n            activePlayer = activePlayer == \"X\" ? \"O\" : \"X\";\r\n        };\r\n\r\n        // Afiseaza activePlayer-ul\r\n        this.cellContainer.addEventListener(\"click\", (e) => {\r\n            const clicked = e.target.closest(\".cell\");\r\n            if (!clicked) return;\r\n            const cellDataId = clicked.getAttribute(\"data-cell\");\r\n            \r\n            if (winningPositionsEmptyArr[cellDataId] == \"\") {\r\n                winningPositionsEmptyArr[cellDataId] = activePlayer;\r\n                clicked.textContent = activePlayer;\r\n                self.activePlayer.textContent = `Este randul jucatorului: \"${activePlayer == \"X\" ? \"O\" : \"X\"}\"`;\r\n                \r\n                switchPlayer();\r\n                checkWinner();\r\n                console.log(winningPositionsEmptyArr, 'winningPositionsEmptyArr');\r\n            }\r\n        });\r\n\r\n        // Verifica daca exista un castigator\r\n        const checkWinner = () => {\r\n            for (let i = 0; i < winningPositions.length; i++) {\r\n                const position = winningPositions[i];\r\n                const positionOne = winningPositionsEmptyArr[position[0]];\r\n                const positionTwo = winningPositionsEmptyArr[position[1]];\r\n                const positionThree = winningPositionsEmptyArr[position[2]];\r\n\r\n                // Verifica daca empty arry-ul are valori sau nu\r\n                if (positionOne == \"\" || positionTwo == \"\" || positionThree == \"\") {\r\n                    continue;\r\n                }\r\n\r\n                // Verifica daca un array din cele 8 este pozitiv\r\n                // Afiseaza modalul cu castigatorul sau remiza\r\n                if (positionOne == positionTwo && positionTwo == positionThree) {\r\n                    self.showWinner.textContent = `Jucatorul: \"${activePlayer == \"X\" ? \"O\" : \"X\"}\" a castigat!`;\r\n                    self.model.classList.remove(\"hidden\");\r\n                    self.overlay.classList.remove(\"hidden\");\r\n                } else if (!winningPositionsEmptyArr.includes(\"\")) {\r\n                    self.showWinner.textContent = \"Remiza!\";\r\n                    self.model.classList.remove(\"hidden\");\r\n                    self.overlay.classList.remove(\"hidden\");\r\n                }\r\n            }\r\n        };\r\n\r\n        // Reseteaza jocul\r\n        this.resetBtn.addEventListener(\"click\", () => {\r\n            self.cells.forEach((item) => (item.textContent = \"\"));\r\n            winningPositionsEmptyArr = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\r\n            self.model.classList.add(\"hidden\");\r\n            self.overlay.classList.add(\"hidden\");\r\n            activePlayer = Math.trunc(Math.random() * 2) === 1 ? \"X\" : \"O\";\r\n            self.activePlayer.textContent = `Primul care alege este: ${activePlayer}`;\r\n        });\r\n    }\r\n}\r\n","// init handlers\nlet layoutHandler = null;\nlet homepageHandler = null;\nlet toDoList_Tema_12 = null;\nlet hangman_Tema_18 = null;\nlet xO_Tema_24 = null;\n\nconst initHandlers = () => {\n    layoutHandler = new LayoutHandler();\n    homepageHandler = new HomepageHandler();\n    toDoList_Tema_12 = new ToDoList_Tema_12();\n    hangman_Tema_18 = new Hangman_Tema_18();\n    xO_Tema_24 = new XO_Tema_24();\n};\n\n// uncomment this to use jQuery\n(($) => {\n    $(document).ready(() => {\n        initHandlers();\n    });\n})(jQuery);\n\n// init handlers using vanilla\n// document.addEventListener('DOMContentLoaded', () => { initHandlers(); });\n"]}